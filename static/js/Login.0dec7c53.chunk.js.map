{"version":3,"file":"static/js/Login.0dec7c53.chunk.js","mappings":"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","sources":["webpack://react-social-network/./src/pages/login/Login.module.scss?ba59","pages/login/Login.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"login\":\"Login_login__PD3gr\",\"container\":\"Login_container__ZZctg\",\"title\":\"Login_title__Oms9y\",\"form\":\"Login_form__YfsK6\",\"emailInputContainer\":\"Login_emailInputContainer__S1LIi\",\"emailInput\":\"Login_emailInput__bi5Ry\",\"errorEmailInput\":\"Login_errorEmailInput__FFvPM\",\"emailInputDark\":\"Login_emailInputDark__Xxzr1\",\"passwordInputContainer\":\"Login_passwordInputContainer__R9e6h\",\"passwordInput\":\"Login_passwordInput__KOYyV\",\"errorPasswordInput\":\"Login_errorPasswordInput__cLcU5\",\"passwordInputDark\":\"Login_passwordInputDark__TxiRL\",\"label\":\"Login_label__N34hR\",\"rememberMeCheckbox\":\"Login_rememberMeCheckbox__iGZen\",\"rememberMeCheckboxDark\":\"Login_rememberMeCheckboxDark__mecgH\",\"rememberMe\":\"Login_rememberMe__vllrv\",\"captcha\":\"Login_captcha__460fc\",\"captchaImage\":\"Login_captchaImage__utfTs\",\"captchaInput\":\"Login_captchaInput__3gP4E\",\"captchaInputDark\":\"Login_captchaInputDark__sSQrH\",\"loginBtn\":\"Login_loginBtn__XDzue\",\"loginBtnDark\":\"Login_loginBtnDark__3Gg4K\",\"containerDark\":\"Login_containerDark__IMM-0\",\"errorEmailMessage\":\"Login_errorEmailMessage__XCD2d\",\"errorPasswordMessage\":\"Login_errorPasswordMessage__Xst32\"};","import React, { FC, useState } from 'react'\r\nimport { SubmitHandler, useForm } from 'react-hook-form'\r\nimport { ReturnComponentType } from 'types'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectCaptchaUrl, selectIsAuth, selectIsDisabled, selectIsLoading } from 'store/selectors'\r\nimport { InputType } from 'components/common/eye/types'\r\nimport { SmallLoader, ErrorCircle, Eye } from 'components'\r\nimport { LoginDataType } from 'api/auth/types'\r\nimport { useAppDispatch, useTheme } from 'hooks'\r\nimport { login } from 'store/asyncActions'\r\nimport { Navigate } from 'react-router-dom'\r\nimport { Path } from 'enums'\r\nimport style from './Login.module.scss'\r\n\r\nexport const Login: FC = (): ReturnComponentType => {\r\n\r\n  const dispatch = useAppDispatch()\r\n\r\n  const isAuth = useSelector(selectIsAuth)\r\n  const captchaUrl = useSelector(selectCaptchaUrl)\r\n  const isLoading = useSelector(selectIsLoading)\r\n  const isDisabled = useSelector(selectIsDisabled)\r\n\r\n  const [inputType, setInputType] = useState<InputType>('password')\r\n\r\n  const isDarkTheme = useTheme('dark')\r\n\r\n  const {register, handleSubmit, formState: {errors, isValid}} = useForm<LoginDataType>({\r\n      mode: 'onChange',\r\n      defaultValues: {email: 'free@samuraijs.com', password: 'free'}\r\n    },\r\n  )\r\n\r\n  const errorEmailMessage = errors?.email?.message\r\n  const errorPasswordMessage = errors?.password?.message\r\n  const emailSettings = {\r\n    required: 'Field is required',\r\n    pattern: {\r\n      value: /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/,\r\n      message: 'Incorrect email',\r\n    }\r\n  }\r\n  const passwordSettings = {\r\n    required: 'Field is required',\r\n    maxLength: {value: 64, message: 'Max 64 characters'},\r\n  }\r\n\r\n  const onSubmit: SubmitHandler<LoginDataType> = (loginData): void => {\r\n    dispatch(login(loginData))\r\n  }\r\n\r\n  if (isAuth) {\r\n    return <Navigate to={Path.PROFILE}/>\r\n  }\r\n\r\n  return (\r\n    <div className={style.login}>\r\n      <div className={`${style.container} ${isDarkTheme && style.containerDark}`}>\r\n\r\n        <h2 className={style.title}>welcome</h2>\r\n\r\n        <form noValidate className={style.form} onSubmit={handleSubmit(onSubmit)}>\r\n          <div className={style.emailInputContainer}>\r\n            <input\r\n              className={`${style.emailInput} ${isDarkTheme && style.emailInputDark} ${errorEmailMessage && style.errorEmailInput}`}\r\n              placeholder=\"Enter email\"\r\n              type=\"email\"\r\n              {...register('email', emailSettings)} />\r\n            {errors?.email &&\r\n              <>\r\n                <ErrorCircle/>\r\n                <p className={style.errorEmailMessage}>{errorEmailMessage}</p>\r\n              </>\r\n            }\r\n          </div>\r\n\r\n          <div className={style.passwordInputContainer}>\r\n            <input\r\n              className={`${style.passwordInput} ${isDarkTheme && style.passwordInputDark} ${errorPasswordMessage && style.errorPasswordInput} `}\r\n              type={inputType}\r\n              placeholder=\"Enter password\"\r\n              {...register('password', passwordSettings)}\r\n            />\r\n            <Eye inputType={inputType} setInputType={setInputType} errorPasswordMessage={errorPasswordMessage}/>\r\n\r\n            {errors?.password &&\r\n              <>\r\n                <ErrorCircle/>\r\n                <p className={style.errorPasswordMessage}>{errorPasswordMessage}</p>\r\n              </>\r\n            }\r\n          </div>\r\n\r\n          <label className={style.label}>\r\n            <input\r\n              className={`${style.rememberMeCheckbox} ${isDarkTheme && style.rememberMeCheckboxDark}`}\r\n              type=\"checkbox\"\r\n              {...register('rememberMe')}\r\n            />\r\n            <span className={style.rememberMe}>Remember me</span>\r\n          </label>\r\n\r\n          {captchaUrl &&\r\n            <div className={style.captcha}>\r\n              <img className={style.captchaImage} src={captchaUrl}/>\r\n              <input\r\n                className={`${style.captchaInput} ${isDarkTheme && style.captchaInputDark}`}\r\n                type=\"text\"\r\n                placeholder=\"Code from the picture\"\r\n                {...register('captcha')} />\r\n            </div>\r\n          }\r\n\r\n          <button\r\n            className={`${style.loginBtn} ${isDarkTheme && style.loginBtnDark}`}\r\n            disabled={!isValid || isDisabled}\r\n            type=\"submit\"\r\n          >\r\n            {isLoading ? <SmallLoader darkColor={'#000'} lightColor={'#fff'}/> : 'Login'}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":["Login","dispatch","useAppDispatch","isAuth","useSelector","selectIsAuth","captchaUrl","selectCaptchaUrl","isLoading","selectIsLoading","isDisabled","selectIsDisabled","useState","inputType","setInputType","isDarkTheme","useTheme","useForm","mode","defaultValues","email","password","register","handleSubmit","formState","errors","isValid","errorEmailMessage","message","errorPasswordMessage","to","Path","className","style","noValidate","onSubmit","loginData","login","placeholder","type","required","pattern","value","maxLength","src","disabled","darkColor","lightColor"],"sourceRoot":""}