{"version":3,"file":"static/js/Profile.195e370e.chunk.js","mappings":"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","sources":["webpack://react-social-network/./src/pages/profile/contact/Contact.module.scss?df6e","pages/profile/contact/Contact.tsx","webpack://react-social-network/./src/pages/profile/data/Data.module.scss?c1b5","pages/profile/data/Data.tsx","webpack://react-social-network/./src/pages/profile/editData/EditData.module.scss?6e73","pages/profile/editData/EditData.tsx","webpack://react-social-network/./src/pages/profile/information/Information.module.scss?0f11","pages/profile/information/Information.tsx","webpack://react-social-network/./src/pages/profile/avatar/Avatar.module.scss?9ddd","pages/profile/avatar/Avatar.tsx","webpack://react-social-network/./src/pages/profile/Profile.module.scss?f719","pages/profile/Profile.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Contact_container__gSAk6\",\"link\":\"Contact_link__Ke3q1\"};","import React, { FC } from 'react'\r\nimport { ReturnComponentType } from 'types'\r\nimport { ContactPropsType } from './types'\r\nimport style from './Contact.module.scss'\r\n\r\nexport const Contact: FC<ContactPropsType> = ({title, link}): ReturnComponentType => {\r\n\r\n  const currentTitle = title[0].toUpperCase() + title.slice(1)\r\n\r\n  return (\r\n    <div className={style.container}>\r\n      {currentTitle}: <a className={style.link} target=\"_blank\" href={link}>{link}</a>\r\n    </div>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"field\":\"Data_field__pqXhh\",\"fullInfoBtn\":\"Data_fullInfoBtn__u2sKQ\",\"lineContainer\":\"Data_lineContainer__VYMcR\",\"editBtn\":\"Data_editBtn__ZXqCl\"};","import React, { FC, useState } from 'react'\r\nimport { Button, Line } from 'components'\r\nimport { ReturnComponentType } from 'types'\r\nimport { DataPropsType } from './types'\r\nimport { useSelector } from 'react-redux'\r\nimport { ContactType } from 'api/profile/types'\r\nimport { Contact } from '../contact'\r\nimport {\r\n  selectContacts,\r\n  selectLookingForAJob,\r\n  selectLookingForAJobDescription,\r\n  selectAboutMe,\r\n} from 'store/selectors'\r\nimport style from './Data.module.scss'\r\n\r\nexport const Data: FC<DataPropsType> = ({setIsEditFullInfo, isOwner}): ReturnComponentType => {\r\n\r\n  const contacts = useSelector(selectContacts)\r\n  const lookingForAJob = useSelector(selectLookingForAJob)\r\n  const lookingForAJobDescription = useSelector(selectLookingForAJobDescription)\r\n  const aboutMe = useSelector(selectAboutMe)\r\n\r\n  const [isShowFullInfo, setIsShowFullInfo] = useState(false)\r\n\r\n  const onToggleIsShowFullInfoClick = (): void => {\r\n    setIsShowFullInfo(!isShowFullInfo)\r\n  }\r\n\r\n  const onSetIsEditFullInfoClick = (): void => {\r\n    setIsEditFullInfo(true)\r\n  }\r\n\r\n  if (!contacts) {\r\n    return null\r\n  }\r\n\r\n  const contactKeys = Object.keys(contacts)\r\n\r\n  return (\r\n    <>\r\n      <div className={style.field}>\r\n        Readiness to work: <span>{lookingForAJob ? 'Looking for a job' : 'Not looking for a job'}</span>\r\n      </div>\r\n      <div className={style.field}>My professional skills: <span>{lookingForAJobDescription}</span></div>\r\n      <div className={style.field}>About me: <span>{aboutMe}</span></div>\r\n\r\n      <Button className={style.fullInfoBtn} onClick={onToggleIsShowFullInfoClick}>\r\n        {isShowFullInfo ? 'Hide full information' : 'Show full information'}\r\n      </Button>\r\n      {isShowFullInfo &&\r\n        <>\r\n          <div className={style.lineContainer}>\r\n            <Line/>\r\n          </div>\r\n\r\n          {contactKeys.map((key) => {\r\n            return <Contact key={key} title={key} link={contacts[key as keyof ContactType]}/>\r\n          })}\r\n\r\n          {isOwner &&\r\n            <Button isPrimary className={style.editBtn} onClick={onSetIsEditFullInfoClick}>Edit</Button>}\r\n        </>\r\n      }\r\n    </>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"field\":\"EditData_field__jbjH2\",\"input\":\"EditData_input__40ZxF\",\"fullInfoBtn\":\"EditData_fullInfoBtn__QnaY-\",\"buttons\":\"EditData_buttons__7SYVR\",\"editBtn\":\"EditData_editBtn__20TGt\",\"backBtn\":\"EditData_backBtn__OVlxg\",\"errorMessage\":\"EditData_errorMessage__i1RVu\"};","import React, { FC } from 'react'\r\nimport { ReturnComponentType } from 'types'\r\nimport { EditDataPropsType } from './types'\r\nimport { ContactType, UserProfileType } from 'api/profile/types'\r\nimport { SubmitHandler, useForm } from 'react-hook-form'\r\nimport { useAppDispatch } from 'hooks'\r\nimport { useSelector } from 'react-redux'\r\nimport { Button } from 'components'\r\nimport { updateUserProfile } from 'store/asyncActions'\r\nimport { selectContacts, selectUserProfile } from 'store/selectors'\r\nimport style from './EditData.module.scss'\r\n\r\nexport const EditData: FC<EditDataPropsType> = ({setIsEditFullInfo}): ReturnComponentType => {\r\n\r\n  const dispatch = useAppDispatch()\r\n\r\n  const userProfile = useSelector(selectUserProfile)\r\n\r\n  const contacts = useSelector(selectContacts)\r\n\r\n  const {register, handleSubmit, formState: {errors}} = useForm<UserProfileType>({\r\n    mode: 'onBlur',\r\n    defaultValues: {...userProfile},\r\n  })\r\n\r\n  const aboutValidate = {\r\n    required: 'Field is required',\r\n    minLength: {value: 3, message: 'Min 3 characters'},\r\n  }\r\n\r\n  const contactsValidate = {\r\n    pattern: {value: /(http|https):\\/\\/([\\w.]+\\/?)\\S*/, message: 'Incorrect title',}\r\n  }\r\n\r\n  const contactRender = Object.keys(contacts)\r\n\r\n  const onSetIsEditFullInfoClick = (): void => {\r\n    setIsEditFullInfo(false)\r\n  }\r\n\r\n  const onSubmit: SubmitHandler<UserProfileType> = (data): void => {\r\n    dispatch(updateUserProfile(data))\r\n    onSetIsEditFullInfoClick()\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n      <div className={style.field}>\r\n        <div>Full name:</div>\r\n        <input\r\n          className={style.input}\r\n          type=\"text\"\r\n          {...register('fullName', aboutValidate)}\r\n        />\r\n        {errors?.fullName && <p className={style.errorMessage}>{errors?.fullName?.message}</p>}\r\n      </div>\r\n\r\n      <div className={style.field}>Readiness to work:\r\n        <input\r\n          type=\"checkbox\"\r\n          {...register('lookingForAJob')}\r\n        />\r\n      </div>\r\n\r\n      <div className={style.field}>My professional skills:\r\n        <input\r\n          className={style.input}\r\n          type=\"text\"\r\n          {...register('lookingForAJobDescription', aboutValidate)}\r\n        />\r\n        {errors?.lookingForAJobDescription &&\r\n          <p className={style.errorMessage}>{errors?.lookingForAJobDescription?.message}</p>}\r\n      </div>\r\n\r\n      <div className={style.field}>About me:\r\n        <input\r\n          className={style.input}\r\n          type=\"text\"\r\n          {...register('aboutMe', aboutValidate)}\r\n        />\r\n        {errors?.aboutMe && <p className={style.errorMessage}>{errors?.aboutMe?.message}</p>}\r\n      </div>\r\n\r\n      {contactRender.map((key) => {\r\n\r\n        const currentKey = key[0].toUpperCase() + key.slice(1)\r\n\r\n        return (\r\n          <div key={key} className={style.field}>\r\n            {currentKey}:\r\n            <input\r\n              className={style.input}\r\n              {...register(`contacts.${key as keyof ContactType}`, contactsValidate)}\r\n            />\r\n            {errors?.contacts &&\r\n              <p className={style.errorMessage}>{errors?.contacts[key as keyof ContactType]?.message}</p>}\r\n          </div>\r\n        )\r\n      })}\r\n\r\n      <div className={style.buttons}>\r\n        <Button type=\"submit\" isPrimary className={style.editBtn}>Save</Button>\r\n        <Button type=\"button\" isPrimary className={style.backBtn} onClick={onSetIsEditFullInfoClick}>Back</Button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Information_container__R69gk\",\"nameContainer\":\"Information_nameContainer__2XdGq\",\"name\":\"Information_name__lM9Jv\",\"online\":\"Information_online__cGjTp\",\"statusContainer\":\"Information_statusContainer__QIGbk\",\"status\":\"Information_status__5Eczb\"};","import React, {FC, useState} from \"react\"\r\nimport {EditableItem, Line} from \"components\"\r\nimport {ReturnComponentType} from \"types/ReturnComponentType\"\r\nimport {InformationPropsType} from \"./types\"\r\nimport {useAppDispatch} from \"hooks\"\r\nimport {useSelector} from \"react-redux\"\r\nimport {selectFullName, selectStatus} from \"store/selectors\"\r\nimport {updateStatus} from \"store/asyncActions\"\r\nimport {Data} from \"../data\"\r\nimport {EditData} from \"../editData\"\r\nimport style from \"./Information.module.scss\"\r\n\r\nexport const Information: FC<InformationPropsType> = ({isOwner}): ReturnComponentType => {\r\n\r\n  const dispatch = useAppDispatch()\r\n\r\n  const status = useSelector(selectStatus)\r\n  const fullName = useSelector(selectFullName)\r\n\r\n  const [isEditFullInfo, setIsEditFullInfo] = useState(false)\r\n\r\n\r\n  const handleUpdateStatus = (updatedTitle: string): void => {\r\n    dispatch(updateStatus(updatedTitle))\r\n  }\r\n\r\n  return (\r\n    <div className={style.container}>\r\n\r\n      <div className={style.nameContainer}>\r\n        <div className={style.name}>{fullName}</div>\r\n        <span className={style.online}>{isOwner ? \"online\" : \"seen recently\"}</span>\r\n      </div>\r\n\r\n      <div className={style.statusContainer}>\r\n        {isOwner\r\n          ? <EditableItem currentTitle={status} handleUpdateTitle={handleUpdateStatus}/>\r\n          : <div className={style.status}>{status}</div>}\r\n      </div>\r\n      <Line/>\r\n\r\n      {isEditFullInfo\r\n        ? <EditData setIsEditFullInfo={setIsEditFullInfo}/>\r\n        : <Data setIsEditFullInfo={setIsEditFullInfo} isOwner={isOwner}/>}\r\n    </div>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"avatar\":\"Avatar_avatar__y2jHq\",\"userAvatarImage\":\"Avatar_userAvatarImage__Z-ziT\",\"defaultAvatarImage\":\"Avatar_defaultAvatarImage__0nZKT\",\"editLink\":\"Avatar_editLink__HCc-O\",\"followBtn\":\"Avatar_followBtn__TsPJs\"};","import React, {FC} from \"react\"\r\nimport {ReturnComponentType} from \"types\"\r\nimport {AvatarPropsType} from \"./types\"\r\nimport {Button, File, SmallLoader} from \"components\"\r\nimport {useSelector} from \"react-redux\"\r\nimport {\r\n  selectIsDisabledFollowed,\r\n  selectIsFollowed,\r\n  selectIsLoadingFollowed,\r\n  selectPhotoLarge,\r\n  selectPhotoSmall\r\n} from \"store/selectors\"\r\nimport {follow, unfollow} from \"store/asyncActions\"\r\nimport {useAppDispatch} from \"hooks\"\r\nimport defaultAvatar from \"assets/images/defaultAvatar.png\"\r\nimport style from \"./Avatar.module.scss\"\r\n\r\nexport const Avatar: FC<AvatarPropsType> = ({isOwner, userId}): ReturnComponentType => {\r\n\r\n  const dispatch = useAppDispatch()\r\n\r\n  const photoLarge = useSelector(selectPhotoLarge)\r\n  const photoSmall = useSelector(selectPhotoSmall)\r\n  const isFollowed = useSelector(selectIsFollowed)\r\n  const isLoadingFollowed = useSelector(selectIsLoadingFollowed)\r\n  const isDisabledFollowed = useSelector(selectIsDisabledFollowed)\r\n\r\n  const userAvatar = photoSmall || photoLarge\r\n\r\n  const onFollowClick = (): void => {\r\n    dispatch(follow(userId))\r\n  }\r\n\r\n  const onUnfollowClick = (): void => {\r\n    dispatch(unfollow(userId))\r\n  }\r\n\r\n  return (\r\n    <div className={style.avatar}>\r\n\r\n      {userAvatar\r\n        ? <img className={style.userAvatarImage} src={userAvatar} alt=\"user avatar\"/>\r\n        : <img className={style.defaultAvatarImage} src={defaultAvatar} alt=\"default avatar\"/>}\r\n\r\n      {isOwner\r\n        ? <File classNameButton={style.editLink}>Change avatar</File>\r\n        : isFollowed\r\n          ? <Button className={style.followBtn} onClick={onUnfollowClick} disabled={isDisabledFollowed}>\r\n            {isLoadingFollowed ? <SmallLoader color={\"#fff\"}/> : \"Unfollow\"}\r\n          </Button>\r\n          : <Button className={style.followBtn} onClick={onFollowClick} disabled={isDisabledFollowed}>\r\n            {isLoadingFollowed ? <SmallLoader color={\"#fff\"}/> : \"Follow\"}\r\n          </Button>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"profile\":\"Profile_profile__Ryb5-\",\"container\":\"Profile_container__NdtA0\",\"rightBlock\":\"Profile_rightBlock__5UXzR\",\"searchPosts\":\"Profile_searchPosts__tZmHd\",\"avatarContainer\":\"Profile_avatarContainer__cZ0yZ\"};","import React, {FC, useEffect} from \"react\"\r\nimport {useAppDispatch} from \"hooks\"\r\nimport {Path} from \"enums\"\r\nimport {useSelector} from \"react-redux\"\r\nimport {Navigate, useParams} from \"react-router-dom\"\r\nimport {ReturnComponentType} from \"types\"\r\nimport {selectAuthorizedUserId, selectIsAuth} from \"store/selectors\"\r\nimport {getFollowedStatus, getStatus, getUserProfile} from \"store/asyncActions\"\r\nimport {Information} from \"./information\"\r\nimport {Posts, PostsEmpty} from \"components\"\r\nimport {Avatar} from \"./avatar\"\r\nimport style from \"./Profile.module.scss\"\r\n\r\nexport const Profile: FC = (): ReturnComponentType => {\r\n\r\n  const {userId} = useParams<{ userId: string }>()\r\n\r\n  const dispatch = useAppDispatch()\r\n\r\n  const isAuth = useSelector(selectIsAuth)\r\n  const authorizedUserId = useSelector(selectAuthorizedUserId)\r\n\r\n  const isOwner = !userId\r\n\r\n  useEffect(() => {\r\n    const id = isOwner ? authorizedUserId : userId\r\n\r\n    if (isAuth) {\r\n      dispatch(getStatus(Number(id)))\r\n      dispatch(getFollowedStatus(Number(id)))\r\n      dispatch(getUserProfile(Number(id)))\r\n    }\r\n  }, [userId])\r\n\r\n  if (!isAuth) {\r\n    return <Navigate to={Path.LOGIN}/>\r\n  }\r\n\r\n  return (\r\n    <div className={style.profile}>\r\n      <div className={style.container}>\r\n\r\n        <div className={style.avatarContainer}>\r\n          <Avatar isOwner={isOwner} userId={Number(userId)}/>\r\n        </div>\r\n\r\n        <div className={style.rightBlock}>\r\n          <Information isOwner={isOwner}/>\r\n          {isOwner\r\n            ? <Posts/>\r\n            : <>\r\n              <div className={style.searchPosts}>No posts yet</div>\r\n              <PostsEmpty/>\r\n            </>\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":["Contact","title","link","currentTitle","toUpperCase","slice","className","style","target","href","Data","setIsEditFullInfo","isOwner","contacts","useSelector","selectContacts","lookingForAJob","selectLookingForAJob","lookingForAJobDescription","selectLookingForAJobDescription","aboutMe","selectAboutMe","useState","isShowFullInfo","setIsShowFullInfo","contactKeys","Object","keys","onClick","map","key","isPrimary","EditData","dispatch","useAppDispatch","userProfile","selectUserProfile","useForm","mode","defaultValues","register","handleSubmit","errors","formState","aboutValidate","required","minLength","value","message","contactsValidate","pattern","contactRender","onSetIsEditFullInfoClick","onSubmit","data","updateUserProfile","type","fullName","currentKey","Information","status","selectStatus","selectFullName","isEditFullInfo","handleUpdateTitle","updatedTitle","updateStatus","Avatar","userId","photoLarge","selectPhotoLarge","photoSmall","selectPhotoSmall","isFollowed","selectIsFollowed","isLoadingFollowed","selectIsLoadingFollowed","isDisabledFollowed","selectIsDisabledFollowed","userAvatar","src","alt","defaultAvatar","classNameButton","unfollow","disabled","color","follow","Profile","useParams","isAuth","selectIsAuth","authorizedUserId","selectAuthorizedUserId","useEffect","id","getStatus","Number","getFollowedStatus","getUserProfile","to","Path"],"sourceRoot":""}