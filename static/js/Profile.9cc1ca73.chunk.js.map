{"version":3,"file":"static/js/Profile.9cc1ca73.chunk.js","mappings":"oQAIaA,EAAoB,SAACC,GAAD,OAAqDA,EAAMC,QAAQC,aAEvFC,EAAe,SAACH,GAAD,OAAkCA,EAAMC,QAAQG,Q,iDCL5E,EAA4B,2BAA5B,EAA8D,sB,SCIjDC,EAAgC,SAAC,GAAwC,IAAvCC,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,KAE9CC,EAAeF,EAAM,GAAGG,cAAgBH,EAAMI,MAAM,GAE1D,OACE,iBAAKC,UAAWC,EAAhB,UACGJ,EADH,MACkB,cAAGG,UAAWC,EAAYC,OAAO,SAASC,KAAMP,EAAhD,SAAuDA,QCV7E,EAAwB,oBAAxB,EAA0D,0BAA1D,EAAoG,4BAApG,EAA0I,sBCS7HQ,EAA0B,SAAC,GAAuD,IAAtDC,EAAqD,EAArDA,kBAAmBC,EAAkC,EAAlCA,QAEpDf,GAAcgB,EAAAA,EAAAA,IAAYnB,GAEhC,GAA4CoB,EAAAA,EAAAA,WAAS,GAArD,eAAOC,EAAP,KAAuBC,EAAvB,KAUA,IAAKnB,EACH,OAAO,KAGT,IAAMoB,EAAcC,OAAOC,KAAKtB,EAAYuB,UAE5C,OACE,iCACE,iBAAKd,UAAWC,EAAhB,iCACqB,0BAAOV,EAAYwB,eAAiB,oBAAsB,8BAE/E,iBAAKf,UAAWC,EAAhB,sCAAqD,0BAAOV,EAAYyB,gCACxE,iBAAKhB,UAAWC,EAAhB,wBAAuC,0BAAOV,EAAY0B,cAE1D,SAAC,KAAD,CAAQjB,UAAWC,EAAmBiB,QAtBN,WAClCR,GAAmBD,IAqBjB,SACGA,EAAiB,wBAA0B,0BAE7CA,IACC,iCACE,gBAAKT,UAAWC,EAAhB,UACE,SAAC,KAAD,MAGDU,EAAYQ,KAAI,SAACC,GAChB,OAAO,SAAC1B,EAAD,CAAmBC,MAAOyB,EAAKxB,KAAML,EAAYuB,SAASM,IAA5CA,MAGtBd,IACC,SAAC,KAAD,CAAQe,WAAS,EAACrB,UAAWC,EAAeiB,QAhCrB,WAC/Bb,GAAkB,IA+BV,yB,oBCnDZ,EAAwB,wBAAxB,EAAwD,wBAAxD,EAAsI,0BAAtI,EAA0K,0BAA1K,EAA8M,0BAA9M,EAAuP,+BCW1OiB,EAAkC,SAAC,GAA8C,IAAD,MAA5CjB,EAA4C,EAA5CA,kBAEzCkB,GAAWC,EAAAA,EAAAA,MAEXjC,GAAcgB,EAAAA,EAAAA,IAAYnB,GAEhC,GAAsDqC,EAAAA,EAAAA,IAAyB,CAC7EC,KAAM,SACNC,eAAc,UAAKpC,KAFdqC,EAAP,EAAOA,SAAUC,EAAjB,EAAiBA,aAA0BC,EAA3C,EAA+BC,UAAYD,OAKrCE,EAAgB,CACpBC,SAAU,oBACVC,UAAW,CAACC,MAAO,EAAGC,QAAS,qBAG3BC,EAAmB,CACvBC,QAAS,CAACH,MAAO,kCAAmCC,QAAS,oBAGzDG,EAAgB3B,OAAOC,KAAP,OAAYtB,QAAZ,IAAYA,OAAZ,EAAYA,EAAcuB,UAE1C0B,EAA2B,WAC/BnC,GAAkB,IAQpB,OACE,kBAAMoC,SAAUZ,GAN+B,SAACa,GAChDnB,GAASoB,EAAAA,EAAAA,IAAkBD,IAC3BF,OAIA,WAEE,iBAAKxC,UAAWC,EAAhB,WACE,yCACA,0BACED,UAAWC,EACX2C,KAAK,QACDhB,EAAS,WAAYI,MAEpB,OAANF,QAAM,IAANA,OAAA,EAAAA,EAAQe,YAAY,cAAG7C,UAAWC,EAAd,gBAAmC6B,QAAnC,IAAmCA,GAAnC,UAAmCA,EAAQe,gBAA3C,aAAmC,EAAkBT,cAG5E,iBAAKpC,UAAWC,EAAhB,gCACE,0BACE2C,KAAK,YACDhB,EAAS,wBAIjB,iBAAK5B,UAAWC,EAAhB,qCACE,0BACED,UAAWC,EACX2C,KAAK,QACDhB,EAAS,4BAA6BI,MAErC,OAANF,QAAM,IAANA,OAAA,EAAAA,EAAQd,6BACP,cAAGhB,UAAWC,EAAd,gBAAmC6B,QAAnC,IAAmCA,GAAnC,UAAmCA,EAAQd,iCAA3C,aAAmC,EAAmCoB,cAG1E,iBAAKpC,UAAWC,EAAhB,uBACE,0BACED,UAAWC,EACX2C,KAAK,QACDhB,EAAS,UAAWI,MAEnB,OAANF,QAAM,IAANA,OAAA,EAAAA,EAAQb,WAAW,cAAGjB,UAAWC,EAAd,gBAAmC6B,QAAnC,IAAmCA,GAAnC,UAAmCA,EAAQb,eAA3C,aAAmC,EAAiBmB,aAGzEG,EAAcpB,KAAI,SAACC,GAAS,IAAD,EAEpB0B,EAAa1B,EAAI,GAAGtB,cAAgBsB,EAAIrB,MAAM,GAEpD,OACE,iBAAeC,UAAWC,EAA1B,UACG6C,EADH,KAEE,0BACE9C,UAAWC,GACP2B,EAAS,YAAD,OAAaR,GAA4BiB,MAEhD,OAANP,QAAM,IAANA,OAAA,EAAAA,EAAQhB,YACP,cAAGd,UAAWC,EAAd,gBAAmC6B,QAAnC,IAAmCA,GAAnC,UAAmCA,EAAQhB,SAASM,UAApD,aAAmC,EAA4CgB,YAPzEhB,OAYd,iBAAKpB,UAAWC,EAAhB,WACE,SAAC,KAAD,CAAQ2C,KAAK,SAASvB,WAAS,EAACrB,UAAWC,EAA3C,mBACA,SAAC,KAAD,CAAQ2C,KAAK,SAASvB,WAAS,EAACrB,UAAWC,EAAeiB,QAASsB,EAAnE,yBCpGR,EAA4B,+BAA5B,EAA2E,mCAA3E,EAAqH,0BAArH,EAAwJ,4BAAxJ,EAAsM,qCAAtM,EAAoP,4BCWvOO,EAAwC,SAAC,GAA8C,IAA7CF,EAA4C,EAA5CA,SAAUvC,EAAkC,EAAlCA,QAEzDiB,GAAWC,EAAAA,EAAAA,MAEX/B,GAASc,EAAAA,EAAAA,IAAYf,GAE3B,GAA4CgB,EAAAA,EAAAA,WAAS,GAArD,eAAOwC,EAAP,KAAuB3C,EAAvB,KAEM4C,GAAcC,EAAAA,EAAAA,IAAS,QAM7B,OACE,iBAAKlD,UAAWC,EAAhB,WAEE,iBAAKD,UAAWC,EAAhB,WACE,gBAAKD,UAAWC,EAAhB,SAA6B4C,KAC7B,iBAAM7C,UAAWC,EAAjB,SAAgCK,EAAU,SAAW,sBAGvD,gBAAKN,UAAWC,EAAhB,SACGK,GACG,SAAC,KAAD,CAAcT,aAAcJ,EAAQ0D,kBAdnB,SAACC,GAC1B7B,GAAS8B,EAAAA,EAAAA,IAAaD,KAa6DH,YAAaA,KACxF,gBAAKjD,UAAWC,EAAhB,SAA+BR,OAErC,SAAC,KAAD,IAECuD,GACG,SAAC1B,EAAD,CAAUjB,kBAAmBA,KAC7B,SAACD,EAAD,CAAMC,kBAAmBA,EAAmBC,QAASA,Q,UC1C/D,EAA4B,2BAA5B,EAAiE,yBAAjE,EAAsG,2BAAtG,EAA2I,yBAA3I,EAA2L,sCAA3L,EAA+O,6BAA/O,EAAiS,oCAAjS,EAAmV,6BAAnV,EAA2X,0BAA3X,EAAia,2BAAja,EAAyc,4BCmB5bgD,EAAc,WAA4B,IAAD,IAE7CC,GAAUC,EAAAA,EAAAA,MAAVD,OAEDhC,GAAWC,EAAAA,EAAAA,MAEXiC,GAASlD,EAAAA,EAAAA,IAAYmD,EAAAA,IACrBnE,GAAcgB,EAAAA,EAAAA,IAAYnB,GAC1BuE,GAAuBpD,EAAAA,EAAAA,IAAYqD,EAAAA,IACnCC,GAAatD,EAAAA,EAAAA,IAAYuD,EAAAA,IACzBC,GAAoBxD,EAAAA,EAAAA,IAAYyD,EAAAA,IAChCC,GAAqB1D,EAAAA,EAAAA,IAAY2D,EAAAA,IAEjC5D,GAAWiD,EACXY,GAAwB,OAAX5E,QAAW,IAAXA,GAAA,UAAAA,EAAa6E,cAAb,eAAqBC,SAArB,OAA8B9E,QAA9B,IAA8BA,GAA9B,UAA8BA,EAAa6E,cAA3C,aAA8B,EAAqBE,QAEtEC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAKlE,EAAUqD,EAAuBJ,EAExCE,IACFlC,GAASkD,EAAAA,EAAAA,IAAUC,OAAOF,KAC1BjD,GAASoD,EAAAA,EAAAA,IAAkBD,OAAOF,KAClCjD,GAASqD,EAAAA,EAAAA,IAAeF,OAAOF,QAEhC,CAACjB,IAUJ,OAAKE,GAKH,gBAAKzD,UAAWC,EAAhB,UACE,iBAAKD,UAAWC,EAAhB,WACE,gBAAKD,UAAWC,EAAhB,UAEE,iBAAKD,UAAWC,EAAhB,WACE,gBAAKD,UAAWC,EAAhB,SACGkE,GACG,gBAAKnE,UAAWC,EAAmB4E,IAAKV,EAAYW,IAAI,WACxDxE,GACE,UAAC,KAAD,YACA,gBAAKN,UAAWC,EAA0B4E,IAAKE,EAAeD,IAAI,oBAClE,gBAAK9E,UAAWC,EAAhB,wCAEA,gBAAKD,UAAWC,EAA0B4E,IAAKE,EAAeD,IAAI,qBAEzExE,GACG,SAAC,KAAD,CAAM0E,gBAAiB/E,EAAvB,2BACA4D,GACE,mBACA7D,UAAWC,EACXiB,QA7BQ,WACtBK,GAAS0D,EAAAA,EAAAA,IAASP,OAAOnB,MA6BX2B,SAAUjB,EAHV,SAKCF,GAAoB,SAAC,KAAD,CAAaoB,UAAW,OAAQC,WAAY,SAAY,cAE7E,mBACApF,UAAWC,EACXiB,QAxCM,WACpBK,GAAS8D,EAAAA,EAAAA,IAAOX,OAAOnB,MAwCT2B,SAAUjB,EAHV,SAKCF,GAAoB,SAAC,KAAD,CAAaoB,UAAW,OAAQC,WAAY,SAAY,iBAIvF,gBAAKpF,UAAWC,EAAhB,UACE,SAAC8C,EAAD,CAAaF,SAAQ,OAAEtD,QAAF,IAAEA,OAAF,EAAEA,EAAcsD,SAAUvC,QAASA,YAvCvD,SAAC,KAAD,CAAUgF,GAAIC,EAAAA,GAAAA","sources":["store/selectors/profile.ts","webpack://react-social-network/./src/pages/profile/contact/Contact.module.scss?df6e","pages/profile/contact/Contact.tsx","webpack://react-social-network/./src/pages/profile/data/Data.module.scss?c1b5","pages/profile/data/Data.tsx","webpack://react-social-network/./src/pages/profile/editData/EditData.module.scss?6e73","pages/profile/editData/EditData.tsx","webpack://react-social-network/./src/pages/profile/information/Information.module.scss?0f11","pages/profile/information/Information.tsx","webpack://react-social-network/./src/pages/profile/Profile.module.scss?f719","pages/profile/Profile.tsx"],"sourcesContent":["import { RootStateType } from 'store'\r\nimport { UserProfileType } from 'api/profile/types'\r\nimport { Nullable } from 'types'\r\n\r\nexport const selectUserProfile = (state: RootStateType): Nullable<UserProfileType> => state.profile.userProfile\r\n\r\nexport const selectStatus = (state: RootStateType): string => state.profile.status\r\n\r\nexport const selectIsLoadingUserProfile = (state: RootStateType): boolean => state.profile.isLoadingUserProfile\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Contact_container__gSAk6\",\"link\":\"Contact_link__Ke3q1\"};","import React, { FC } from 'react'\r\nimport { ReturnComponentType } from 'types'\r\nimport { ContactPropsType } from './types'\r\nimport style from './Contact.module.scss'\r\n\r\nexport const Contact: FC<ContactPropsType> = ({title, link}): ReturnComponentType => {\r\n\r\n  const currentTitle = title[0].toUpperCase() + title.slice(1)\r\n\r\n  return (\r\n    <div className={style.container}>\r\n      {currentTitle}: <a className={style.link} target=\"_blank\" href={link}>{link}</a>\r\n    </div>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"field\":\"Data_field__pqXhh\",\"fullInfoBtn\":\"Data_fullInfoBtn__u2sKQ\",\"lineContainer\":\"Data_lineContainer__VYMcR\",\"editBtn\":\"Data_editBtn__ZXqCl\"};","import React, { FC, useState } from 'react'\r\nimport { Button, Line } from 'components'\r\nimport { ReturnComponentType } from 'types'\r\nimport { DataPropsType } from './types'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectUserProfile } from 'store/selectors'\r\nimport { ContactType } from 'api/profile/types'\r\nimport { Contact } from '../contact'\r\nimport style from './Data.module.scss'\r\n\r\nexport const Data: FC<DataPropsType> = ({setIsEditFullInfo, isOwner}): ReturnComponentType => {\r\n\r\n  const userProfile = useSelector(selectUserProfile)\r\n\r\n  const [isShowFullInfo, setIsShowFullInfo] = useState(false)\r\n\r\n  const onToggleIsShowFullInfoClick = (): void => {\r\n    setIsShowFullInfo(!isShowFullInfo)\r\n  }\r\n\r\n  const onSetIsEditFullInfoClick = (): void => {\r\n    setIsEditFullInfo(true)\r\n  }\r\n\r\n  if (!userProfile) {\r\n    return null\r\n  }\r\n\r\n  const contactKeys = Object.keys(userProfile.contacts)\r\n\r\n  return (\r\n    <>\r\n      <div className={style.field}>\r\n        Readiness to work: <span>{userProfile.lookingForAJob ? 'Looking for a job' : 'Not looking for a job'}</span>\r\n      </div>\r\n      <div className={style.field}>My professional skills: <span>{userProfile.lookingForAJobDescription}</span></div>\r\n      <div className={style.field}>About me: <span>{userProfile.aboutMe}</span></div>\r\n\r\n      <Button className={style.fullInfoBtn} onClick={onToggleIsShowFullInfoClick}>\r\n        {isShowFullInfo ? 'Hide full information' : 'Show full information'}\r\n      </Button>\r\n      {isShowFullInfo &&\r\n        <>\r\n          <div className={style.lineContainer}>\r\n            <Line/>\r\n          </div>\r\n\r\n          {contactKeys.map((key) => {\r\n            return <Contact key={key} title={key} link={userProfile.contacts[key as keyof ContactType]}/>\r\n          })}\r\n\r\n          {isOwner &&\r\n            <Button isPrimary className={style.editBtn} onClick={onSetIsEditFullInfoClick}>Edit</Button>}\r\n        </>\r\n      }\r\n    </>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"field\":\"EditData_field__jbjH2\",\"input\":\"EditData_input__40ZxF\",\"fullInfoBtn\":\"EditData_fullInfoBtn__QnaY-\",\"buttons\":\"EditData_buttons__7SYVR\",\"editBtn\":\"EditData_editBtn__20TGt\",\"backBtn\":\"EditData_backBtn__OVlxg\",\"errorMessage\":\"EditData_errorMessage__i1RVu\"};","import React, { FC } from 'react'\r\nimport { ReturnComponentType } from 'types'\r\nimport { EditDataPropsType } from './types'\r\nimport { ContactType, UserProfileType } from 'api/profile/types'\r\nimport { SubmitHandler, useForm } from 'react-hook-form'\r\nimport { useAppDispatch } from 'hooks'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectUserProfile } from 'store/selectors'\r\nimport { Button } from 'components'\r\nimport { updateUserProfile } from 'store/asyncActions'\r\nimport style from './EditData.module.scss'\r\n\r\nexport const EditData: FC<EditDataPropsType> = ({setIsEditFullInfo}): ReturnComponentType => {\r\n\r\n  const dispatch = useAppDispatch()\r\n\r\n  const userProfile = useSelector(selectUserProfile)\r\n\r\n  const {register, handleSubmit, formState: {errors}} = useForm<UserProfileType>({\r\n    mode: 'onBlur',\r\n    defaultValues: {...userProfile},\r\n  })\r\n\r\n  const aboutValidate = {\r\n    required: 'Field is required',\r\n    minLength: {value: 3, message: 'Min 3 characters'},\r\n  }\r\n\r\n  const contactsValidate = {\r\n    pattern: {value: /(http|https):\\/\\/([\\w.]+\\/?)\\S*/, message: 'Incorrect title',}\r\n  }\r\n\r\n  const contactRender = Object.keys(userProfile!?.contacts)\r\n\r\n  const onSetIsEditFullInfoClick = (): void => {\r\n    setIsEditFullInfo(false)\r\n  }\r\n\r\n  const onSubmit: SubmitHandler<UserProfileType> = (data): void => {\r\n    dispatch(updateUserProfile(data))\r\n    onSetIsEditFullInfoClick()\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n      <div className={style.field}>\r\n        <div>Full name:</div>\r\n        <input\r\n          className={style.input}\r\n          type=\"text\"\r\n          {...register('fullName', aboutValidate)}\r\n        />\r\n        {errors?.fullName && <p className={style.errorMessage}>{errors?.fullName?.message}</p>}\r\n      </div>\r\n\r\n      <div className={style.field}>Readiness to work:\r\n        <input\r\n          type=\"checkbox\"\r\n          {...register('lookingForAJob')}\r\n        />\r\n      </div>\r\n\r\n      <div className={style.field}>My professional skills:\r\n        <input\r\n          className={style.input}\r\n          type=\"text\"\r\n          {...register('lookingForAJobDescription', aboutValidate)}\r\n        />\r\n        {errors?.lookingForAJobDescription &&\r\n          <p className={style.errorMessage}>{errors?.lookingForAJobDescription?.message}</p>}\r\n      </div>\r\n\r\n      <div className={style.field}>About me:\r\n        <input\r\n          className={style.input}\r\n          type=\"text\"\r\n          {...register('aboutMe', aboutValidate)}\r\n        />\r\n        {errors?.aboutMe && <p className={style.errorMessage}>{errors?.aboutMe?.message}</p>}\r\n      </div>\r\n\r\n      {contactRender.map((key) => {\r\n\r\n        const currentKey = key[0].toUpperCase() + key.slice(1)\r\n\r\n        return (\r\n          <div key={key} className={style.field}>\r\n            {currentKey}:\r\n            <input\r\n              className={style.input}\r\n              {...register(`contacts.${key as keyof ContactType}`, contactsValidate)}\r\n            />\r\n            {errors?.contacts &&\r\n              <p className={style.errorMessage}>{errors?.contacts[key as keyof ContactType]?.message}</p>}\r\n          </div>\r\n        )\r\n      })}\r\n\r\n      <div className={style.buttons}>\r\n        <Button type=\"submit\" isPrimary className={style.editBtn}>Save</Button>\r\n        <Button type=\"button\" isPrimary className={style.backBtn} onClick={onSetIsEditFullInfoClick}>Back</Button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Information_container__R69gk\",\"nameContainer\":\"Information_nameContainer__2XdGq\",\"name\":\"Information_name__lM9Jv\",\"online\":\"Information_online__cGjTp\",\"statusContainer\":\"Information_statusContainer__QIGbk\",\"status\":\"Information_status__5Eczb\"};","import React, { FC, useState } from 'react'\r\nimport { EditableItem, Line } from 'components'\r\nimport { ReturnComponentType } from 'types/ReturnComponentType'\r\nimport { InformationPropsType } from './types'\r\nimport { useAppDispatch, useTheme } from 'hooks'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectStatus } from 'store/selectors'\r\nimport { updateStatus } from 'store/asyncActions'\r\nimport { Data } from '../data'\r\nimport { EditData } from '../editData'\r\nimport style from './Information.module.scss'\r\n\r\nexport const Information: FC<InformationPropsType> = ({fullName, isOwner}): ReturnComponentType => {\r\n\r\n  const dispatch = useAppDispatch()\r\n\r\n  const status = useSelector(selectStatus)\r\n\r\n  const [isEditFullInfo, setIsEditFullInfo] = useState(false)\r\n\r\n  const isDarkTheme = useTheme('dark')\r\n\r\n  const handleUpdateStatus = (updatedTitle: string): void => {\r\n    dispatch(updateStatus(updatedTitle))\r\n  }\r\n\r\n  return (\r\n    <div className={style.container}>\r\n\r\n      <div className={style.nameContainer}>\r\n        <div className={style.name}>{fullName}</div>\r\n        <span className={style.online}>{isOwner ? 'online' : 'seen recently'}</span>\r\n      </div>\r\n\r\n      <div className={style.statusContainer}>\r\n        {isOwner\r\n          ? <EditableItem currentTitle={status} handleUpdateTitle={handleUpdateStatus} isDarkTheme={isDarkTheme}/>\r\n          : <div className={style.status}>{status}</div>}\r\n      </div>\r\n      <Line/>\r\n\r\n      {isEditFullInfo\r\n        ? <EditData setIsEditFullInfo={setIsEditFullInfo}/>\r\n        : <Data setIsEditFullInfo={setIsEditFullInfo} isOwner={isOwner}/>}\r\n    </div>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Profile_container__NdtA0\",\"profile\":\"Profile_profile__Ryb5-\",\"leftBlock\":\"Profile_leftBlock__dX9N7\",\"content\":\"Profile_content__+a-Me\",\"avatarImageContainer\":\"Profile_avatarImageContainer__0ZuFJ\",\"avatarImage\":\"Profile_avatarImage__gn0yr\",\"defaultAvatarImage\":\"Profile_defaultAvatarImage__lIz5p\",\"uploadPhoto\":\"Profile_uploadPhoto__m3Ij8\",\"editLink\":\"Profile_editLink__iCEh7\",\"followBtn\":\"Profile_followBtn__2SKYs\",\"rightBlock\":\"Profile_rightBlock__5UXzR\"};","import React, { FC, useEffect } from 'react'\r\nimport { Path } from 'enums'\r\nimport { useSelector } from 'react-redux'\r\nimport { Navigate, useParams } from 'react-router-dom'\r\nimport { ReturnComponentType } from 'types'\r\nimport {\r\n  selectAuthorizedUserDataId,\r\n  selectIsAuth,\r\n  selectIsDisabledFollowed,\r\n  selectIsFollowed,\r\n  selectIsLoadingFollowed,\r\n  selectUserProfile\r\n} from 'store/selectors'\r\nimport { useAppDispatch } from 'hooks'\r\nimport { follow, getFollowedStatus, getStatus, getUserProfile, unfollow } from 'store/asyncActions'\r\nimport { Information } from './information'\r\nimport { File, SmallLoader } from 'components'\r\nimport defaultAvatar from 'assets/images/defaultAvatar.png'\r\nimport style from './Profile.module.scss'\r\n\r\nexport const Profile: FC = (): ReturnComponentType => {\r\n\r\n  const {userId} = useParams<{ userId: string }>()\r\n\r\n  const dispatch = useAppDispatch()\r\n\r\n  const isAuth = useSelector(selectIsAuth)\r\n  const userProfile = useSelector(selectUserProfile)\r\n  const authorizedUserDataId = useSelector(selectAuthorizedUserDataId)\r\n  const isFollowed = useSelector(selectIsFollowed)\r\n  const isLoadingFollowed = useSelector(selectIsLoadingFollowed)\r\n  const isDisabledFollowed = useSelector(selectIsDisabledFollowed)\r\n\r\n  const isOwner = !userId\r\n  const userAvatar = userProfile?.photos?.small || userProfile?.photos?.large\r\n\r\n  useEffect(() => {\r\n    const id = isOwner ? authorizedUserDataId : userId\r\n\r\n    if (isAuth) {\r\n      dispatch(getStatus(Number(id)))\r\n      dispatch(getFollowedStatus(Number(id)))\r\n      dispatch(getUserProfile(Number(id)))\r\n    }\r\n  }, [userId])\r\n\r\n  const onFollowClick = (): void => {\r\n    dispatch(follow(Number(userId)))\r\n  }\r\n\r\n  const onUnfollowClick = (): void => {\r\n    dispatch(unfollow(Number(userId)))\r\n  }\r\n\r\n  if (!isAuth) {\r\n    return <Navigate to={Path.LOGIN}/>\r\n  }\r\n\r\n  return (\r\n    <div className={style.container}>\r\n      <div className={style.profile}>\r\n        <div className={style.leftBlock}>\r\n\r\n          <div className={style.content}>\r\n            <div className={style.avatarImageContainer}>\r\n              {userAvatar\r\n                ? <img className={style.avatarImage} src={userAvatar} alt=\"avatar\"/>\r\n                : isOwner\r\n                  ? <File>\r\n                    <img className={style.defaultAvatarImage} src={defaultAvatar} alt=\"default avatar\"/>\r\n                    <div className={style.uploadPhoto}>Upload a profile photo</div>\r\n                  </File>\r\n                  : <img className={style.defaultAvatarImage} src={defaultAvatar} alt=\"default avatar\"/>}\r\n            </div>\r\n            {isOwner\r\n              ? <File classNameButton={style.editLink}>Change avatar</File>\r\n              : isFollowed\r\n                ? <button\r\n                  className={style.followBtn}\r\n                  onClick={onUnfollowClick}\r\n                  disabled={isDisabledFollowed}\r\n                >\r\n                  {isLoadingFollowed ? <SmallLoader darkColor={'#000'} lightColor={'#fff'}/> : 'Unfollow'}\r\n                </button>\r\n                : <button\r\n                  className={style.followBtn}\r\n                  onClick={onFollowClick}\r\n                  disabled={isDisabledFollowed}\r\n                >\r\n                  {isLoadingFollowed ? <SmallLoader darkColor={'#000'} lightColor={'#fff'}/> : 'Follow'}\r\n                </button>}\r\n          </div>\r\n        </div>\r\n        <div className={style.rightBlock}>\r\n          <Information fullName={userProfile!?.fullName} isOwner={isOwner}/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":["selectUserProfile","state","profile","userProfile","selectStatus","status","Contact","title","link","currentTitle","toUpperCase","slice","className","style","target","href","Data","setIsEditFullInfo","isOwner","useSelector","useState","isShowFullInfo","setIsShowFullInfo","contactKeys","Object","keys","contacts","lookingForAJob","lookingForAJobDescription","aboutMe","onClick","map","key","isPrimary","EditData","dispatch","useAppDispatch","useForm","mode","defaultValues","register","handleSubmit","errors","formState","aboutValidate","required","minLength","value","message","contactsValidate","pattern","contactRender","onSetIsEditFullInfoClick","onSubmit","data","updateUserProfile","type","fullName","currentKey","Information","isEditFullInfo","isDarkTheme","useTheme","handleUpdateTitle","updatedTitle","updateStatus","Profile","userId","useParams","isAuth","selectIsAuth","authorizedUserDataId","selectAuthorizedUserDataId","isFollowed","selectIsFollowed","isLoadingFollowed","selectIsLoadingFollowed","isDisabledFollowed","selectIsDisabledFollowed","userAvatar","photos","small","large","useEffect","id","getStatus","Number","getFollowedStatus","getUserProfile","src","alt","defaultAvatar","classNameButton","unfollow","disabled","darkColor","lightColor","follow","to","Path"],"sourceRoot":""}