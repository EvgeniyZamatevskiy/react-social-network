{"version":3,"file":"static/js/Profile.f10b317d.chunk.js","mappings":"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","sources":["webpack://react-social-network/./src/pages/profile/contact/Contact.module.scss?df6e","pages/profile/contact/Contact.tsx","webpack://react-social-network/./src/pages/profile/data/Data.module.scss?c1b5","pages/profile/data/Data.tsx","webpack://react-social-network/./src/pages/profile/editData/EditData.module.scss?6e73","pages/profile/editData/EditData.tsx","webpack://react-social-network/./src/pages/profile/information/Information.module.scss?0f11","pages/profile/information/Information.tsx","webpack://react-social-network/./src/pages/profile/Profile.module.scss?f719","pages/profile/Profile.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Contact_container__gSAk6\",\"link\":\"Contact_link__Ke3q1\"};","import React, { FC } from 'react'\r\nimport { ReturnComponentType } from 'types'\r\nimport { ContactPropsType } from './types'\r\nimport style from './Contact.module.scss'\r\n\r\nexport const Contact: FC<ContactPropsType> = ({title, link}): ReturnComponentType => {\r\n\r\n  const currentTitle = title[0].toUpperCase() + title.slice(1)\r\n\r\n  return (\r\n    <div className={style.container}>\r\n      {currentTitle}: <a className={style.link} target=\"_blank\" href={link}>{link}</a>\r\n    </div>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"field\":\"Data_field__pqXhh\",\"fullInfoBtn\":\"Data_fullInfoBtn__u2sKQ\",\"lineContainer\":\"Data_lineContainer__VYMcR\",\"editBtn\":\"Data_editBtn__ZXqCl\"};","import React, { FC, useState } from 'react'\r\nimport { Button, Line } from 'components'\r\nimport { ReturnComponentType } from 'types'\r\nimport { DataPropsType } from './types'\r\nimport { useSelector } from 'react-redux'\r\nimport { ContactType } from 'api/profile/types'\r\nimport { Contact } from '../contact'\r\nimport {\r\n  selectContacts,\r\n  selectLookingForAJob,\r\n  selectLookingForAJobDescription,\r\n  selectAboutMe,\r\n} from 'store/selectors'\r\nimport style from './Data.module.scss'\r\n\r\nexport const Data: FC<DataPropsType> = ({setIsEditFullInfo, isOwner}): ReturnComponentType => {\r\n\r\n  const contacts = useSelector(selectContacts)\r\n  const lookingForAJob = useSelector(selectLookingForAJob)\r\n  const lookingForAJobDescription = useSelector(selectLookingForAJobDescription)\r\n  const aboutMe = useSelector(selectAboutMe)\r\n\r\n  const [isShowFullInfo, setIsShowFullInfo] = useState(false)\r\n\r\n  const onToggleIsShowFullInfoClick = (): void => {\r\n    setIsShowFullInfo(!isShowFullInfo)\r\n  }\r\n\r\n  const onSetIsEditFullInfoClick = (): void => {\r\n    setIsEditFullInfo(true)\r\n  }\r\n\r\n  if (!contacts) {\r\n    return null\r\n  }\r\n\r\n  const contactKeys = Object.keys(contacts)\r\n\r\n  return (\r\n    <>\r\n      <div className={style.field}>\r\n        Readiness to work: <span>{lookingForAJob ? 'Looking for a job' : 'Not looking for a job'}</span>\r\n      </div>\r\n      <div className={style.field}>My professional skills: <span>{lookingForAJobDescription}</span></div>\r\n      <div className={style.field}>About me: <span>{aboutMe}</span></div>\r\n\r\n      <Button className={style.fullInfoBtn} onClick={onToggleIsShowFullInfoClick}>\r\n        {isShowFullInfo ? 'Hide full information' : 'Show full information'}\r\n      </Button>\r\n      {isShowFullInfo &&\r\n        <>\r\n          <div className={style.lineContainer}>\r\n            <Line/>\r\n          </div>\r\n\r\n          {contactKeys.map((key) => {\r\n            return <Contact key={key} title={key} link={contacts[key as keyof ContactType]}/>\r\n          })}\r\n\r\n          {isOwner &&\r\n            <Button isPrimary className={style.editBtn} onClick={onSetIsEditFullInfoClick}>Edit</Button>}\r\n        </>\r\n      }\r\n    </>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"field\":\"EditData_field__jbjH2\",\"input\":\"EditData_input__40ZxF\",\"fullInfoBtn\":\"EditData_fullInfoBtn__QnaY-\",\"buttons\":\"EditData_buttons__7SYVR\",\"editBtn\":\"EditData_editBtn__20TGt\",\"backBtn\":\"EditData_backBtn__OVlxg\",\"errorMessage\":\"EditData_errorMessage__i1RVu\"};","import React, { FC } from 'react'\r\nimport { ReturnComponentType } from 'types'\r\nimport { EditDataPropsType } from './types'\r\nimport { ContactType, UserProfileType } from 'api/profile/types'\r\nimport { SubmitHandler, useForm } from 'react-hook-form'\r\nimport { useAppDispatch } from 'hooks'\r\nimport { useSelector } from 'react-redux'\r\nimport { Button } from 'components'\r\nimport { updateUserProfile } from 'store/asyncActions'\r\nimport { selectContacts, selectUserProfile } from 'store/selectors'\r\nimport style from './EditData.module.scss'\r\n\r\nexport const EditData: FC<EditDataPropsType> = ({setIsEditFullInfo}): ReturnComponentType => {\r\n\r\n  const dispatch = useAppDispatch()\r\n\r\n  const userProfile = useSelector(selectUserProfile)\r\n\r\n  const contacts = useSelector(selectContacts)\r\n\r\n  const {register, handleSubmit, formState: {errors}} = useForm<UserProfileType>({\r\n    mode: 'onBlur',\r\n    defaultValues: {...userProfile},\r\n  })\r\n\r\n  const aboutValidate = {\r\n    required: 'Field is required',\r\n    minLength: {value: 3, message: 'Min 3 characters'},\r\n  }\r\n\r\n  const contactsValidate = {\r\n    pattern: {value: /(http|https):\\/\\/([\\w.]+\\/?)\\S*/, message: 'Incorrect title',}\r\n  }\r\n\r\n  const contactRender = Object.keys(contacts)\r\n\r\n  const onSetIsEditFullInfoClick = (): void => {\r\n    setIsEditFullInfo(false)\r\n  }\r\n\r\n  const onSubmit: SubmitHandler<UserProfileType> = (data): void => {\r\n    dispatch(updateUserProfile(data))\r\n    onSetIsEditFullInfoClick()\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n      <div className={style.field}>\r\n        <div>Full name:</div>\r\n        <input\r\n          className={style.input}\r\n          type=\"text\"\r\n          {...register('fullName', aboutValidate)}\r\n        />\r\n        {errors?.fullName && <p className={style.errorMessage}>{errors?.fullName?.message}</p>}\r\n      </div>\r\n\r\n      <div className={style.field}>Readiness to work:\r\n        <input\r\n          type=\"checkbox\"\r\n          {...register('lookingForAJob')}\r\n        />\r\n      </div>\r\n\r\n      <div className={style.field}>My professional skills:\r\n        <input\r\n          className={style.input}\r\n          type=\"text\"\r\n          {...register('lookingForAJobDescription', aboutValidate)}\r\n        />\r\n        {errors?.lookingForAJobDescription &&\r\n          <p className={style.errorMessage}>{errors?.lookingForAJobDescription?.message}</p>}\r\n      </div>\r\n\r\n      <div className={style.field}>About me:\r\n        <input\r\n          className={style.input}\r\n          type=\"text\"\r\n          {...register('aboutMe', aboutValidate)}\r\n        />\r\n        {errors?.aboutMe && <p className={style.errorMessage}>{errors?.aboutMe?.message}</p>}\r\n      </div>\r\n\r\n      {contactRender.map((key) => {\r\n\r\n        const currentKey = key[0].toUpperCase() + key.slice(1)\r\n\r\n        return (\r\n          <div key={key} className={style.field}>\r\n            {currentKey}:\r\n            <input\r\n              className={style.input}\r\n              {...register(`contacts.${key as keyof ContactType}`, contactsValidate)}\r\n            />\r\n            {errors?.contacts &&\r\n              <p className={style.errorMessage}>{errors?.contacts[key as keyof ContactType]?.message}</p>}\r\n          </div>\r\n        )\r\n      })}\r\n\r\n      <div className={style.buttons}>\r\n        <Button type=\"submit\" isPrimary className={style.editBtn}>Save</Button>\r\n        <Button type=\"button\" isPrimary className={style.backBtn} onClick={onSetIsEditFullInfoClick}>Back</Button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Information_container__R69gk\",\"nameContainer\":\"Information_nameContainer__2XdGq\",\"name\":\"Information_name__lM9Jv\",\"online\":\"Information_online__cGjTp\",\"statusContainer\":\"Information_statusContainer__QIGbk\",\"status\":\"Information_status__5Eczb\"};","import React, { FC, useState } from 'react'\r\nimport { EditableItem, Line } from 'components'\r\nimport { ReturnComponentType } from 'types/ReturnComponentType'\r\nimport { InformationPropsType } from './types'\r\nimport { useAppDispatch, useTheme } from 'hooks'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectFullName, selectStatus } from 'store/selectors'\r\nimport { updateStatus } from 'store/asyncActions'\r\nimport { Data } from '../data'\r\nimport { EditData } from '../editData'\r\nimport style from './Information.module.scss'\r\n\r\nexport const Information: FC<InformationPropsType> = ({isOwner}): ReturnComponentType => {\r\n\r\n  const dispatch = useAppDispatch()\r\n\r\n  const status = useSelector(selectStatus)\r\n  const fullName = useSelector(selectFullName)\r\n\r\n  const [isEditFullInfo, setIsEditFullInfo] = useState(false)\r\n\r\n  const isDarkTheme = useTheme('dark')\r\n\r\n  const handleUpdateStatus = (updatedTitle: string): void => {\r\n    dispatch(updateStatus(updatedTitle))\r\n  }\r\n\r\n  return (\r\n    <div className={style.container}>\r\n\r\n      <div className={style.nameContainer}>\r\n        <div className={style.name}>{fullName}</div>\r\n        <span className={style.online}>{isOwner ? 'online' : 'seen recently'}</span>\r\n      </div>\r\n\r\n      <div className={style.statusContainer}>\r\n        {isOwner\r\n          ? <EditableItem currentTitle={status} handleUpdateTitle={handleUpdateStatus} isDarkTheme={isDarkTheme}/>\r\n          : <div className={style.status}>{status}</div>}\r\n      </div>\r\n      <Line/>\r\n\r\n      {isEditFullInfo\r\n        ? <EditData setIsEditFullInfo={setIsEditFullInfo}/>\r\n        : <Data setIsEditFullInfo={setIsEditFullInfo} isOwner={isOwner}/>}\r\n    </div>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Profile_container__NdtA0\",\"profile\":\"Profile_profile__Ryb5-\",\"rightBlock\":\"Profile_rightBlock__5UXzR\",\"searchPosts\":\"Profile_searchPosts__tZmHd\",\"leftBlock\":\"Profile_leftBlock__dX9N7\",\"content\":\"Profile_content__+a-Me\",\"avatarImageContainer\":\"Profile_avatarImageContainer__0ZuFJ\",\"avatarImage\":\"Profile_avatarImage__gn0yr\",\"defaultAvatarImage\":\"Profile_defaultAvatarImage__lIz5p\",\"uploadPhoto\":\"Profile_uploadPhoto__m3Ij8\",\"editLink\":\"Profile_editLink__iCEh7\",\"followBtn\":\"Profile_followBtn__2SKYs\"};","import React, { FC, useEffect } from 'react'\nimport { useAppDispatch } from 'hooks'\nimport { Path } from 'enums'\nimport { useSelector } from 'react-redux'\nimport { Navigate, useParams } from 'react-router-dom'\nimport { ReturnComponentType } from 'types'\nimport {\n  selectAuthorizedUserId,\n  selectIsAuth,\n  selectIsDisabledFollowed,\n  selectIsFollowed,\n  selectIsLoadingFollowed,\n  selectPhotoLarge,\n  selectPhotoSmall\n} from 'store/selectors'\nimport {\n  follow,\n  getFollowedStatus,\n  getStatus,\n  getUserProfile,\n  unfollow\n} from 'store/asyncActions'\nimport { Information } from './information'\nimport { File, Posts, PostsEmpty, SmallLoader } from 'components'\nimport defaultAvatar from 'assets/images/defaultAvatar.png'\nimport style from './Profile.module.scss'\n\nexport const Profile: FC = (): ReturnComponentType => {\n  const {userId} = useParams<{ userId: string }>()\n\n  const dispatch = useAppDispatch()\n\n  const isAuth = useSelector(selectIsAuth)\n  const photoLarge = useSelector(selectPhotoLarge)\n  const photoSmall = useSelector(selectPhotoSmall)\n  const authorizedUserId = useSelector(selectAuthorizedUserId)\n  const isFollowed = useSelector(selectIsFollowed)\n  const isLoadingFollowed = useSelector(selectIsLoadingFollowed)\n  const isDisabledFollowed = useSelector(selectIsDisabledFollowed)\n\n  const isOwner = !userId\n  const userAvatar = photoSmall || photoLarge\n\n  useEffect(() => {\n    const id = isOwner ? authorizedUserId : userId\n\n    if (isAuth) {\n      dispatch(getStatus(Number(id)))\n      dispatch(getFollowedStatus(Number(id)))\n      dispatch(getUserProfile(Number(id)))\n    }\n  }, [userId])\n\n  const onFollowClick = (): void => {\n    dispatch(follow(Number(userId)))\n  }\n\n  const onUnfollowClick = (): void => {\n    dispatch(unfollow(Number(userId)))\n  }\n\n  if (!isAuth) {\n    return <Navigate to={Path.LOGIN}/>\n  }\n\n  return (\n    <div className={style.container}>\n      <div className={style.profile}>\n        <div className={style.leftBlock}>\n          <div className={style.content}>\n\n            <div className={style.avatarImageContainer}>\n              {userAvatar ? <img className={style.avatarImage} src={userAvatar} alt='avatar'/>\n                : isOwner\n                  ? <File>\n                    <img className={style.defaultAvatarImage} src={defaultAvatar} alt='default avatar'/>\n                    <div className={style.uploadPhoto}>Upload a profile photo</div>\n                  </File>\n                  : <img className={style.defaultAvatarImage} src={defaultAvatar} alt='default avatar'/>}\n            </div>\n\n            {isOwner ?\n              <File classNameButton={style.editLink}>Change avatar</File>\n              : isFollowed\n                ? <button className={style.followBtn} onClick={onUnfollowClick} disabled={isDisabledFollowed}>\n                  {isLoadingFollowed ? <SmallLoader darkColor={'#000'} lightColor={'#fff'}/> : 'Unfollow'}\n                </button>\n                : <button className={style.followBtn} onClick={onFollowClick} disabled={isDisabledFollowed}>\n                  {isLoadingFollowed ? <SmallLoader darkColor={'#000'} lightColor={'#fff'}/> : 'Follow'}\n                </button>\n            }\n          </div>\n        </div>\n        <div className={style.rightBlock}>\n          <Information isOwner={isOwner}/>\n          {isOwner\n            ? <Posts/>\n            : <>\n              <div className={style.searchPosts}>No posts yet</div>\n              <PostsEmpty/>\n            </>\n          }\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"names":["Contact","title","link","currentTitle","toUpperCase","slice","className","style","target","href","Data","setIsEditFullInfo","isOwner","contacts","useSelector","selectContacts","lookingForAJob","selectLookingForAJob","lookingForAJobDescription","selectLookingForAJobDescription","aboutMe","selectAboutMe","useState","isShowFullInfo","setIsShowFullInfo","contactKeys","Object","keys","onClick","map","key","isPrimary","EditData","dispatch","useAppDispatch","userProfile","selectUserProfile","useForm","mode","defaultValues","register","handleSubmit","errors","formState","aboutValidate","required","minLength","value","message","contactsValidate","pattern","contactRender","onSetIsEditFullInfoClick","onSubmit","data","updateUserProfile","type","fullName","currentKey","Information","status","selectStatus","selectFullName","isEditFullInfo","isDarkTheme","useTheme","handleUpdateTitle","updatedTitle","updateStatus","Profile","userId","useParams","isAuth","selectIsAuth","photoLarge","selectPhotoLarge","photoSmall","selectPhotoSmall","authorizedUserId","selectAuthorizedUserId","isFollowed","selectIsFollowed","isLoadingFollowed","selectIsLoadingFollowed","isDisabledFollowed","selectIsDisabledFollowed","userAvatar","useEffect","id","getStatus","Number","getFollowedStatus","getUserProfile","src","alt","defaultAvatar","classNameButton","unfollow","disabled","darkColor","lightColor","follow","to","Path"],"sourceRoot":""}