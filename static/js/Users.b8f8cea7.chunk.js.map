{"version":3,"file":"static/js/Users.b8f8cea7.chunk.js","mappings":"mRACA,GAAgB,UAAY,yBAAyB,MAAQ,qBAAqB,KAAO,oBAAoB,cAAgB,8B,SCoBhHA,EAAY,WAEvB,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IACpBC,GAASF,EAAAA,EAAAA,IAAYG,EAAAA,IACrBC,GAAiBJ,EAAAA,EAAAA,IAAYK,EAAAA,IAC7BC,GAAON,EAAAA,EAAAA,IAAYO,EAAAA,IACnBC,GAASR,EAAAA,EAAAA,IAAYS,EAAAA,IACrBC,GAAOV,EAAAA,EAAAA,IAAYW,EAAAA,IACnBC,GAAYZ,EAAAA,EAAAA,IAAYa,EAAAA,IACxBC,GAAkBd,EAAAA,EAAAA,IAAYe,EAAAA,IAG9BC,EAAcjB,EAAMkB,KAAI,SAACC,GAAD,OAAU,SAAC,KAAD,CAAoBA,KAAMA,GAAfA,EAAKC,QAExDC,EAAAA,EAAAA,YAAU,WACJlB,GACFL,GAASwB,EAAAA,EAAAA,IAAS,CAACf,KAAAA,EAAME,OAAAA,EAAQE,KAAAA,EAAME,UAAAA,OAExC,CAACN,EAAME,EAAQE,IAMlB,OAAKR,GAKH,gBAAKoB,UAAWC,EAAAA,UAAhB,UACE,iBAAKD,UAAWC,EAAAA,MAAhB,WACE,iBAAKD,UAAWC,EAAAA,KAAhB,WACE,eAAID,UAAWC,EAAAA,MAAf,oBACA,SAAC,KAAD,CACEC,gBAAiBV,EACjBF,UAAWA,EACXF,KAAMA,EACNe,mBAjBiB,SAACf,GAC1Bb,GAAS6B,EAAAA,EAAAA,IAAQhB,WAmBb,SAAC,KAAD,KACA,gBAAKY,UAAWC,EAAAA,cAAhB,SACGnB,GACG,SAAC,KAAD,IACAY,EAAYW,OAASX,GAAc,SAAC,KAAD,YAnBtC,SAAC,KAAD,CAAUY,GAAIC,EAAAA,GAAAA","sources":["webpack://react-social-network/./src/pages/users/Users.module.scss?53a7","pages/users/Users.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Users_container__DRXOx\",\"users\":\"Users_users__pj0mM\",\"body\":\"Users_body__ZC+49\",\"userContainer\":\"Users_userContainer__Yui6j\"};","import React, {FC, useEffect} from \"react\"\r\nimport {Filtration, Loader, Pagination, User, UsersEmpty} from \"components\"\r\nimport {ReturnComponentType} from \"types\"\r\nimport {useSelector} from \"react-redux\"\r\nimport {useAppDispatch} from \"hooks\"\r\nimport {getUsers} from \"store/asyncActions\"\r\nimport {Navigate} from \"react-router-dom\"\r\nimport {Path} from \"enums\"\r\nimport {setPage} from \"store/slices/users\"\r\nimport {\r\n  selectFriend,\r\n  selectIsAuth,\r\n  selectIsLoadingUsers,\r\n  selectPage,\r\n  selectPageCount,\r\n  selectTerm,\r\n  selectTotalUsersCount,\r\n  selectUsers\r\n} from \"store/selectors\"\r\nimport style from \"./Users.module.scss\"\r\n\r\nexport const Users: FC = (): ReturnComponentType => {\r\n\r\n  const dispatch = useAppDispatch()\r\n\r\n  const users = useSelector(selectUsers)\r\n  const isAuth = useSelector(selectIsAuth)\r\n  const isLoadingUsers = useSelector(selectIsLoadingUsers)\r\n  const term = useSelector(selectTerm)\r\n  const friend = useSelector(selectFriend)\r\n  const page = useSelector(selectPage)\r\n  const pageCount = useSelector(selectPageCount)\r\n  const totalUsersCount = useSelector(selectTotalUsersCount)\r\n\r\n\r\n  const usersRender = users.map((user) => <User key={user.id} user={user}/>)\r\n\r\n  useEffect(() => {\r\n    if (isAuth) {\r\n      dispatch(getUsers({term, friend, page, pageCount}))\r\n    }\r\n  }, [term, friend, page])\r\n\r\n  const handleSetPageClick = (page: number) => {\r\n    dispatch(setPage(page))\r\n  }\r\n\r\n  if (!isAuth) {\r\n    return <Navigate to={Path.LOGIN}/>\r\n  }\r\n\r\n  return (\r\n    <div className={style.container}>\r\n      <div className={style.users}>\r\n        <div className={style.body}>\r\n          <h2 className={style.title}>Users</h2>\r\n          <Pagination\r\n            totalItemsCount={totalUsersCount}\r\n            pageCount={pageCount}\r\n            page={page}\r\n            handleSetPageClick={handleSetPageClick}\r\n          />\r\n        </div>\r\n        <Filtration/>\r\n        <div className={style.userContainer}>\r\n          {isLoadingUsers\r\n            ? <Loader/>\r\n            : usersRender.length ? usersRender : <UsersEmpty/>}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":["Users","dispatch","useAppDispatch","users","useSelector","selectUsers","isAuth","selectIsAuth","isLoadingUsers","selectIsLoadingUsers","term","selectTerm","friend","selectFriend","page","selectPage","pageCount","selectPageCount","totalUsersCount","selectTotalUsersCount","usersRender","map","user","id","useEffect","getUsers","className","style","totalItemsCount","handleSetPageClick","setPage","length","to","Path"],"sourceRoot":""}